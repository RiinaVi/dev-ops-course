pipeline {
    agent any
    tools {nodejs "NodeJS"}

    stages {
        stage('Checkout') {
            steps {
                checkout ([
                    $class: 'GitSCM',
                    branches: [[name: '*/hw-20']],
                    userRemoteConfigs: [[
                        url: 'git@github.com:RiinaVi/dev-ops-course.git',
                        credentialsId: 'github-ssh-key'
                    ]]
                ])
            }
        }
        stage('Build') {
            steps {
                dir('hw20') {
                    sh 'npm install'
                    sh 'npm run build'
                }
            }
        }
        stage('Test') {
            steps {
                dir('hw20') {
                  sh 'npm run test'
                }
            }
        }
        stage('Deploy') {
            steps {
             dir('hw20') {
                 withCredentials([sshUserPrivateKey(credentialsId: "ec2-ssh-key", keyFileVariable: 'keyfile')]) {
                     sh "ssh-keyscan -t rsa ${env.APP_SERVER_IP} >> ~/.ssh/known_hosts"

                     // Delete previous build on app server
                     sh """
                     ssh -i ${keyfile} ubuntu@${env.APP_SERVER_IP} << \'ENDSSH\'
                     rm -rf ~/*
ENDSSH
                                         """
                    // Copy build and package-json to app server
                    sh "scp -i ${keyfile} -r ./build ${env.APP_SERVER_USERNAME}@${env.APP_SERVER_IP}:./build"
                    sh "scp -i ${keyfile} -r ./package.json ${env.APP_SERVER_USERNAME}@${env.APP_SERVER_IP}:./package.json"

                    // install node.js, install dependencies, run index.js on background using forever
                    sh """
                    ssh -i ${keyfile} ubuntu@${env.APP_SERVER_IP} << \'ENDSSH\'
                    curl -sL https://deb.nodesource.com/setup_18.x | sudo -E bash -
                    sudo apt-get install -y nodejs
                    npm i
                    sudo npm i forever -g
                    forever stopall
                    forever start ./build/index.js
ENDSSH
                    """
                 }
                 }
            }
        }

    }
    post {
        always {
            mail to: 'riinavi86@gmail.com',
                // from is empty string because default value is 'address not configured yet', which looks weird
                from: '',
                subject: "Build: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "The build was completed. \n\nBuild URL: ${env.BUILD_URL}"

        }
        success {
            telegramSend "Pipeline $env.JOB_NAME #$env.BUILD_NUMBER  $env.BUILD_URL"
        }
        failure {

            telegramSend "Pipeline $env.JOB_NAME #$env.BUILD_NUMBER - failed, please check $env.BUILD_URL"
        }
    }
}

