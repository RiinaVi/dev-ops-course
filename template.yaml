AWSTemplateFormatVersion: 2010-09-09
Resources:
  VPC1:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/16
      Tags:
        - Key: Name
          Value: my-vpc-1
  PublicSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: us-east-1a
      Tags:
        - Key: Name
          Value: my-public-subnet-1
  PublicSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.0.2.0/24
      AvailabilityZone: us-east-1b
      Tags:
        - Key: Name
          Value: my-public-subnet-2
  RouteTable1:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: my-route-table-1
  PublicSubnet1Association:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable1
      SubnetId: !Ref PublicSubnet1
  PublicSubnet2Association:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable1
      SubnetId: !Ref PublicSubnet2
  PrivateSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.0.3.0/24
      AvailabilityZone: us-east-1c
      Tags:
        - Key: Name
          Value: my-private-subnet-1
  PrivateSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC1
      CidrBlock: 10.0.4.0/24
      AvailabilityZone: us-east-1d
      Tags:
        - Key: Name
          Value: my-private-subnet-2
  RouteTable2:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC1
      Tags:
        - Key: Name
          Value: my-route-table-2
  PrivateSubnet1Association:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable2
      SubnetId: !Ref PrivateSubnet1
  PrivateSubnet2Association:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      RouteTableId: !Ref RouteTable2
      SubnetId: !Ref PrivateSubnet2
  InternetGateway1:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Name
          Value: ig-1
  NAT1:
    Type: 'AWS::EC2::NatGateway'
    Properties:
      SubnetId: !Ref PrivateSubnet1
      ConnectivityType: private
      Tags:
        - Key: Name
          Value: nat-1
  PublicRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable1
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway1
  VPCGatewayAttachment1:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      InternetGatewayId: !Ref InternetGateway1
      VpcId: !Ref VPC1
  PrivateRoute1:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref RouteTable2
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NAT1
  SecurityGroup1:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: my-security-group-1
      GroupDescription: "My public security group"
      VpcId: !Ref VPC1
      SecurityGroupIngress:
        - IpProtocol: tcp
          ToPort: 80
          FromPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          ToPort: 22
          FromPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
  WebServer:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-05c13eab67c5d8861
      InstanceType: t2.micro
      KeyName: !Ref MyKeyPair
      SubnetId: !Ref PublicSubnet1
      SecurityGroupIds:
        - !Ref SecurityGroup1
      Tags:
        - Key: Name
          Value: my-web-server
  ElasticIP1:
    Type: 'AWS::EC2::EIP'
    Properties:
      InstanceId: !Ref WebServer
  PrivateSecurityGroup1:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: my-private-security-group-1
      GroupDescription: "My private security group"
      VpcId: !Ref VPC1
      SecurityGroupIngress:
        - IpProtocol: tcp
          ToPort: 3306
          FromPort: 3306
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          ToPort: 22
          FromPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
  Database:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-05c13eab67c5d8861
      InstanceType: t2.micro
      KeyName: !Ref MyKeyPair
      SubnetId: !Ref PrivateSubnet1
      SecurityGroupIds:
        - !Ref PrivateSecurityGroup1
      Tags:
        - Key: Name
          Value: my-database
  Bucket1:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Ref MyBucketName
Parameters:
  MyKeyPair:
    Description: Amazon EC2 Key Pair
    Type: 'AWS::EC2::KeyPair::KeyName'
  MyBucketName:
    Type: String
    Description: S3 bucket name
    Default: devops-course-homework-7-arina
Outputs:
  ElasticIPOutput:
    Description: "Elastic IP"
    Value: !GetAtt ElasticIP1.PublicIp
    Export:
      Name: elastic-ip-output

